/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/planar_human_base_rigs.glb --transform
Author: dacancino (https://sketchfab.com/dacancino)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/planar-human-base-rigs-15a1d670d29b4195a10c23dca0d13da9
Title: PLANAR HUMAN BASE RIGS
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Model(props) {
	const { nodes, materials } = useGLTF(
		"/models/planar_human_base_rigs-transformed.glb",
	);

	const ref = useRef();

	useLayoutEffect(() => {
		if (props.tl) {
			props.tl.to(
				ref.current.position,
				{
					y: 20,
					duration: 0.01,
				},
				9.4998,
			);
		}

		Object.values(materials).forEach((material) => {
			material.envMapIntensity = 0;
			material.transparent = true;
			material.toneMapped = false;

			if (props.tl) {
				props.tl.to(
					material,
					{
						envMapIntensity: 2,
						duration: 2,
						ease: "power3.inOut",
					},
					4,
				);

				props.tl.to(
					material.color,
					{
						r: 3,
						g: 3,
						b: 3,
						duration: 2,
						ease: "power3.inOut",
					},
					4,
				);
			}
		});
	}, [props.tl]);

	useFrame(() => {
		Object.values(materials).forEach((material) => {
			if (props.tl._time >= 9.5) {
				material.opacity = 0;
			} else {
				material.opacity = 1;
			}
		});
	});
	return (
		<group {...props} ref={ref} dispose={null}>
			<group rotation={[-1.57, 0, 0]}>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group position={[2.95, 0, 0]} scale={1.72}>
						{/* <primitive object={nodes.GLTF_created_1_rootJoint} />
            <skinnedMesh geometry={nodes.Object_47.geometry} material={materials.sculpture} skeleton={nodes.Object_47.skeleton} /> */}
					</group>
					<mesh
						geometry={nodes.Object_4.geometry}
						material={materials.sculpture}
						ref={ref}
					/>
					<primitive object={nodes.GLTF_created_0_rootJoint} />
					<skinnedMesh
						geometry={nodes.Object_9.geometry}
						material={materials.sculpture}
						skeleton={nodes.Object_9.skeleton}
					/>
					{/* <mesh
						geometry={nodes.Object_82.geometry}
						material={materials.testLight}
						rotation={[0, -0.11, -Math.PI / 4]}
						scale={4.5}
					/> */}
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("/models/planar_human_base_rigs-transformed.glb");
